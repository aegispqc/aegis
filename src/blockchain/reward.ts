const rewardValue: bigint[] = [ // rewardValue(n) =  Math.floor( Math.pow(0.9170040432, n) * 240 ) * 100000000n

	24000000000n,
	22000000000n,
	20180000000n,
	18500000000n,
	16970000000n,
	15560000000n,
	14270000000n,
	13080000000n,
	11990000000n,
	11000000000n,
	10090000000n,
	9250000000n,
	8480000000n,
	7780000000n,
	7130000000n,
	6540000000n,
	5990000000n,
	5500000000n,
	5040000000n,
	4620000000n,
	4240000000n,
	3890000000n,
	3560000000n,
	3270000000n,
	2990000000n,
	2750000000n,
	2520000000n,
	2310000000n,
	2120000000n,
	1940000000n,
	1780000000n,
	1630000000n,
	1490000000n,
	1370000000n,
	1260000000n,
	1150000000n,
	1060000000n,
	970000000n,
	890000000n
];

const rewardEndHeight: number[] = [ // rewardEndHeight(n) =  Math.round(Math.pow(1.033, n) * 52596)

	52596,
	106927,
	163051,
	221027,
	280916,
	342782,
	406689,
	472705,
	540900,
	611345,
	684115,
	759287,
	836939,
	917154,
	1000016,
	1085612,
	1174033,
	1265372,
	1359725,
	1457192,
	1557875,
	1661881,
	1769319,
	1880302,
	1994948,
	2113377,
	2235714,
	2362089,
	2492634,
	2627487,
	2766790,
	2910690,
	3059339,
	3212893,
	3371515,
	3535371,
	3704634,
	3879483,
	4060102
]

function getRewardByHeight(height: number): bigint {
	if (height === 4030165) { // end height; ps. total: 21000000000000000n
		return 670000000n;
	}
	else if (height > 4030165) {
		return 0n;
	}

	for (let i = 0; i < 39; i++) {
		if (height < rewardEndHeight[i]) {
			return rewardValue[i];
		}
	}

	return 0n;
}

export { getRewardByHeight };